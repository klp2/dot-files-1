" Load plugins using Pathogen. Don't worry if this bit doesn't make sense.

runtime bundle/vim-pathogen/autoload/pathogen.vim
" Bundle: tpope/vim-pathogen
call pathogen#infect()

" Bundle: https://github.com/907th/vim-auto-save.git
" Bundle: https://github.com/Lokaltog/vim-powerline.git
" Bundle: https://github.com/airblade/vim-gitgutter.git
" Bundle: https://github.com/altercation/vim-colors-solarized.git
" Bundle: https://github.com/bling/vim-airline.git
" Bundle: https://github.com/bronson/vim-trailing-whitespace.git
" Bundle: https://github.com/henrik/vim-indexed-search.git
" Bundle: https://github.com/scrooloose/nerdcommenter.git
" Bundle: https://github.com/scrooloose/nerdtree.git
" Bundle: https://github.com/tpope/vim-abolish.git
" Bundle: https://github.com/tpope/vim-fugitive.git
" Bundle: https://github.com/tpope/vim-surround.git
" Bundle: https://github.com/vim-scripts/vim-json-bundle.git
" Bundle: https://github.com/wincent/Command-T.git
" Bundle: https://github.com/qstrahl/vim-matchmaker.git

syntax enable
set background=dark
colorscheme solarized

set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]
set laststatus=2
set bs=2
filetype plugin on

au BufReadPost *.pl   set keywordprg=perldoc\ -f

" Indent using tabs (while in visual mode)
vnoremap < <gv
vnoremap > >gv
" make tab in v mode ident code
vmap <tab> >gv
vmap <s-tab> <gv
" make tab in normal mode ident code
nmap <tab> I<tab><esc>
nmap <s-tab> ^i<bs><esc>

" case insensitive search
set ignorecase smartcase

" highlight all matches
set hlsearch

" lookahead as search pattern is specified
set incsearch

" tabs
set softtabstop=4
set shiftwidth=4
set tabstop=4
set smarttab
set expandtab

" 4 space tabs in html get annoying
au BufRead,BufNewFile *.tmpl set filetype=html
autocmd FileType html :setlocal sw=2 ts=2 sts=2

" indents
set smartindent
set autoindent

" show matching brackets
autocmd FileType perl set showmatch

" show line numbers
autocmd FileType perl set number

let mapleader = ","


"command -range=% -nargs=* Tidy <line1>,<line2>!
"  \perltidy -pbp <args>

nnoremap <silent> = :%!perltidy -q<Enter>
vnoremap <silent> = :!perltidy -q<Enter>

"remove all trailing whitespace
:nnoremap <silent> - :FixWhitespace<CR>
:vnoremap <silent> - :FixWhitespace<CR>

"dictionary sort
:vnoremap <silent> so :!sort -d<CR>

"dictionary sort unique
:vnoremap <silent> su :!sort -d -u<CR>

"pretty print json
map <leader>jt <Esc>:%!json_xs -f json -t json-pretty<CR>

:set list!
:set listchars=tab:\|-

" enables shift-tab for outdent
exe 'set t_kB=' . nr2char(27) . '[Z'

" reflow text
nnoremap Q gqap
vnoremap Q gq

" highlight comments
highlight Comment term=bold ctermfg=white

"====[ Goto last location in non-empty files ]=======

autocmd BufReadPost *  if line("'\"") > 1 && line("'\"") <= line("$")
                   \|     exe "normal! g`\""
                   \|  endif

set stl=%f\ %m\ %r%{fugitive#statusline()}\ Line:%l/%L[%p%%]\ Col:%v\ Buf:#%n\ [%b][0x%B]

" prevent left and right arrows from being disabled in insert mode when
" editing SQL files
let g:omni_sql_no_default_maps = 1

" paste the same line multiple times without the content of the "yank" being replaced
" http://stackoverflow.com/questions/7163947/vim-paste-multiple-times
xnoremap p pgvy

" https://github.com/jonswar/perl-code-tidyall/blob/master/etc/editors/tidyall.vim

" Run tidyall on the current buffer. If an error occurs, show it and leave it
" in tidyall.ERR, and undo any changes.

command! T :call TidyAll()

command! TidyAll :call TidyAll()
function! TidyAll()
    let cur_pos = getpos( '.' )
    let cmdline = ':1,$!tidyall --mode editor --pipe %:p 2> tidyall.ERR'
    execute( cmdline )
    if v:shell_error
        echo "\nContents of tidyall.ERR:\n\n" . system( 'cat tidyall.ERR' )
        silent undo
    else
        call system( 'rm tidyall.ERR' )
    endif
    call setpos( '.', cur_pos )
endfunction

" Uncomment to set leader to ,
" let mapleader = ','

" Bind to ,t (or leader+t)
map <leader>t :TidyAll<cr>

let g:auto_save = 1  " enable AutoSave on Vim startup

let g:gitgutter_realtime = 0

let g:matchmaker_enable_startup = 1

" http://stackoverflow.com/questions/1327978/sorting-words-not-lines-in-vim
:vnoremap <F1> d:execute 'normal a' . join(sort(split(getreg('"'))), ' ')<CR>

map <F2> :NERDTreeToggle<CR>
